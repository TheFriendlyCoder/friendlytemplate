/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'friendlytemplate.java-application-conventions'
    // Needed to construct fat jars (./gradlew shadowJar)
    // output will be in ./app/build/lib/friendlytemplate.jar
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

dependencies {
    implementation 'org.apache.commons:commons-text'
    implementation project(':utilities')

    // jgit dependencies
    implementation 'org.eclipse.jgit:org.eclipse.jgit:6.3.0.202209071007-r'
    //implementation 'org.eclipse.jgit:org.eclipse.jgit.archive:6.3.0.202209071007-r'
    //implementation 'org.eclipse.jgit:org.eclipse.jgit.ssh.jsch:6.3.0.202209071007-r'

    // Needed to squelch logging warnings in jgit
    implementation 'org.slf4j:slf4j-simple:2.0.3'

    // picocli dependencies for command line interface processing
    implementation 'info.picocli:picocli:4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'

    // yaml parser
    implementation 'org.yaml:snakeyaml:1.33'

    // library for writing declarative unit test matchers
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

compileJava {
    // Enable picocli annotation processor
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

application {
    // Define the main class for the application.
    mainClass = 'friendlytemplate.app.App'
}

run {
    // Allow us to run the cli tool using ./gradlew run
    standardInput = System.in
}

shadowJar {
    archiveBaseName.set('friendlytemplate')
    // Removes the "-all" suffix on the generated jar name
    archiveClassifier.set('')
    // Used to remove the version number from the jar file name
    archiveVersion.set('')
}